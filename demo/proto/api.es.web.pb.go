// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: api.es.web.proto

package proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Pic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pic    string `protobuf:"bytes,1,opt,name=pic,proto3" json:"pic,omitempty"`
	Width  int64  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height int64  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	Scheme string `protobuf:"bytes,4,opt,name=scheme,proto3" json:"scheme,omitempty"`
}

func (x *Pic) Reset() {
	*x = Pic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pic) ProtoMessage() {}

func (x *Pic) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pic.ProtoReflect.Descriptor instead.
func (*Pic) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{0}
}

func (x *Pic) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *Pic) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Pic) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Pic) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ResId         string `protobuf:"bytes,2,opt,name=res_id,json=resId,proto3" json:"res_id,omitempty"`
	OriUrl        string `protobuf:"bytes,3,opt,name=ori_url,json=oriUrl,proto3" json:"ori_url,omitempty"`
	WebUrl        string `protobuf:"bytes,4,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty"`
	VideoCover    string `protobuf:"bytes,5,opt,name=video_cover,json=videoCover,proto3" json:"video_cover,omitempty"`
	OwnerMark     string `protobuf:"bytes,6,opt,name=owner_mark,json=ownerMark,proto3" json:"owner_mark,omitempty"`
	FileExtension string `protobuf:"bytes,7,opt,name=file_extension,json=fileExtension,proto3" json:"file_extension,omitempty"`
	Size          int64  `protobuf:"varint,8,opt,name=size,proto3" json:"size,omitempty"`
	Width         int64  `protobuf:"varint,9,opt,name=width,proto3" json:"width,omitempty"`
	Height        int64  `protobuf:"varint,10,opt,name=height,proto3" json:"height,omitempty"`
	PlayTime      int64  `protobuf:"varint,11,opt,name=play_time,json=playTime,proto3" json:"play_time,omitempty"`
	FileName      string `protobuf:"bytes,12,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{1}
}

func (x *File) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *File) GetResId() string {
	if x != nil {
		return x.ResId
	}
	return ""
}

func (x *File) GetOriUrl() string {
	if x != nil {
		return x.OriUrl
	}
	return ""
}

func (x *File) GetWebUrl() string {
	if x != nil {
		return x.WebUrl
	}
	return ""
}

func (x *File) GetVideoCover() string {
	if x != nil {
		return x.VideoCover
	}
	return ""
}

func (x *File) GetOwnerMark() string {
	if x != nil {
		return x.OwnerMark
	}
	return ""
}

func (x *File) GetFileExtension() string {
	if x != nil {
		return x.FileExtension
	}
	return ""
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *File) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *File) GetPlayTime() int64 {
	if x != nil {
		return x.PlayTime
	}
	return 0
}

func (x *File) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

//API搜索入参
type ApiSearchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Words string `protobuf:"bytes,1,opt,name=words,proto3" json:"words,omitempty"`
	//搜索类型1=在家早教核心课, 2=专项亲子课, 3=清单, 4=知识电台,5=大咖, 6=10分钟大玩家,7=已购早教, 8=家长大学,9=家长社区,10=健康馆,11=用户攻略,12deep课,13=音乐,14=用户,15=玩具品类,16=玩具PCG文章(废弃合并到用户攻略里),17=小步头条知识,18=今日妈妈故事,19=小步精选之窗,20=历史一小步,21=新闻有意思,22=绘本精度,
	Type      []int64 `protobuf:"varint,2,rep,packed,name=type,proto3" json:"type,omitempty"`
	SubSearch int64   `protobuf:"varint,3,opt,name=sub_search,json=subSearch,proto3" json:"sub_search,omitempty"` //是否是二级页面
	Pn        int64   `protobuf:"varint,4,opt,name=pn,proto3" json:"pn,omitempty"`
	Rn        int64   `protobuf:"varint,5,opt,name=rn,proto3" json:"rn,omitempty"`
	EnterType int64   `protobuf:"varint,6,opt,name=enter_type,json=enterType,proto3" json:"enter_type,omitempty"`
}

func (x *ApiSearchParams) Reset() {
	*x = ApiSearchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApiSearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiSearchParams) ProtoMessage() {}

func (x *ApiSearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiSearchParams.ProtoReflect.Descriptor instead.
func (*ApiSearchParams) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{2}
}

func (x *ApiSearchParams) GetWords() string {
	if x != nil {
		return x.Words
	}
	return ""
}

func (x *ApiSearchParams) GetType() []int64 {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ApiSearchParams) GetSubSearch() int64 {
	if x != nil {
		return x.SubSearch
	}
	return 0
}

func (x *ApiSearchParams) GetPn() int64 {
	if x != nil {
		return x.Pn
	}
	return 0
}

func (x *ApiSearchParams) GetRn() int64 {
	if x != nil {
		return x.Rn
	}
	return 0
}

func (x *ApiSearchParams) GetEnterType() int64 {
	if x != nil {
		return x.EnterType
	}
	return 0
}

//搜索返回所有数据
type SearchAllResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result map[int64]*SearchResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SearchAllResult) Reset() {
	*x = SearchAllResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchAllResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchAllResult) ProtoMessage() {}

func (x *SearchAllResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchAllResult.ProtoReflect.Descriptor instead.
func (*SearchAllResult) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{3}
}

func (x *SearchAllResult) GetResult() map[int64]*SearchResult {
	if x != nil {
		return x.Result
	}
	return nil
}

//每个搜索类型返回的数据
type SearchResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string        `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Icon           string        `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	BoughtTag      string        `protobuf:"bytes,3,opt,name=bought_tag,json=boughtTag,proto3" json:"bought_tag,omitempty"`
	TotalCount     int64         `protobuf:"varint,4,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Subtitle       string        `protobuf:"bytes,5,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	SubtitleScheme string        `protobuf:"bytes,6,opt,name=subtitle_scheme,json=subtitleScheme,proto3" json:"subtitle_scheme,omitempty"`
	ShowType       int64         `protobuf:"varint,7,opt,name=show_type,json=showType,proto3" json:"show_type,omitempty"`
	MoreInfo       *MoreInfo     `protobuf:"bytes,8,opt,name=more_info,json=moreInfo,proto3" json:"more_info,omitempty"`
	PageContinue   int64         `protobuf:"varint,9,opt,name=page_continue,json=pageContinue,proto3" json:"page_continue,omitempty"`
	EnterType      int64         `protobuf:"varint,10,opt,name=enter_type,json=enterType,proto3" json:"enter_type,omitempty"`
	SearchKw       string        `protobuf:"bytes,11,opt,name=search_kw,json=searchKw,proto3" json:"search_kw,omitempty"`
	SearchType     int64         `protobuf:"varint,12,opt,name=search_type,json=searchType,proto3" json:"search_type,omitempty"`
	Items          []*SearchItem `protobuf:"bytes,13,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{4}
}

func (x *SearchResult) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchResult) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SearchResult) GetBoughtTag() string {
	if x != nil {
		return x.BoughtTag
	}
	return ""
}

func (x *SearchResult) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SearchResult) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *SearchResult) GetSubtitleScheme() string {
	if x != nil {
		return x.SubtitleScheme
	}
	return ""
}

func (x *SearchResult) GetShowType() int64 {
	if x != nil {
		return x.ShowType
	}
	return 0
}

func (x *SearchResult) GetMoreInfo() *MoreInfo {
	if x != nil {
		return x.MoreInfo
	}
	return nil
}

func (x *SearchResult) GetPageContinue() int64 {
	if x != nil {
		return x.PageContinue
	}
	return 0
}

func (x *SearchResult) GetEnterType() int64 {
	if x != nil {
		return x.EnterType
	}
	return 0
}

func (x *SearchResult) GetSearchKw() string {
	if x != nil {
		return x.SearchKw
	}
	return ""
}

func (x *SearchResult) GetSearchType() int64 {
	if x != nil {
		return x.SearchType
	}
	return 0
}

func (x *SearchResult) GetItems() []*SearchItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type MoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Scheme int64  `protobuf:"varint,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
}

func (x *MoreInfo) Reset() {
	*x = MoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoreInfo) ProtoMessage() {}

func (x *MoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoreInfo.ProtoReflect.Descriptor instead.
func (*MoreInfo) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{5}
}

func (x *MoreInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MoreInfo) GetScheme() int64 {
	if x != nil {
		return x.Scheme
	}
	return 0
}

type DownloadInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadId    string `protobuf:"bytes,1,opt,name=download_id,json=downloadId,proto3" json:"download_id,omitempty"`
	DownloadTitle string `protobuf:"bytes,2,opt,name=download_title,json=downloadTitle,proto3" json:"download_title,omitempty"`
	DownloadPic   string `protobuf:"bytes,3,opt,name=download_pic,json=downloadPic,proto3" json:"download_pic,omitempty"`
}

func (x *DownloadInfo) Reset() {
	*x = DownloadInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadInfo) ProtoMessage() {}

func (x *DownloadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadInfo.ProtoReflect.Descriptor instead.
func (*DownloadInfo) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{6}
}

func (x *DownloadInfo) GetDownloadId() string {
	if x != nil {
		return x.DownloadId
	}
	return ""
}

func (x *DownloadInfo) GetDownloadTitle() string {
	if x != nil {
		return x.DownloadTitle
	}
	return ""
}

func (x *DownloadInfo) GetDownloadPic() string {
	if x != nil {
		return x.DownloadPic
	}
	return ""
}

type Favorite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	AttrId    int64 `protobuf:"varint,2,opt,name=attr_id,json=attrId,proto3" json:"attr_id,omitempty"`
	FmMusicId int64 `protobuf:"varint,3,opt,name=fm_music_id,json=fmMusicId,proto3" json:"fm_music_id,omitempty"`
}

func (x *Favorite) Reset() {
	*x = Favorite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Favorite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Favorite) ProtoMessage() {}

func (x *Favorite) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Favorite.ProtoReflect.Descriptor instead.
func (*Favorite) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{7}
}

func (x *Favorite) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Favorite) GetAttrId() int64 {
	if x != nil {
		return x.AttrId
	}
	return 0
}

func (x *Favorite) GetFmMusicId() int64 {
	if x != nil {
		return x.FmMusicId
	}
	return 0
}

//每个类型对应的不同的item
type SearchItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pic                string              `protobuf:"bytes,1,opt,name=pic,proto3" json:"pic,omitempty"`
	VideoTag           int64               `protobuf:"varint,2,opt,name=video_tag,json=videoTag,proto3" json:"video_tag,omitempty"`
	Title              string              `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Desc               string              `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	AttrMsg            string              `protobuf:"bytes,5,opt,name=attr_msg,json=attrMsg,proto3" json:"attr_msg,omitempty"`
	Scheme             string              `protobuf:"bytes,6,opt,name=scheme,proto3" json:"scheme,omitempty"`
	BoughtTag          string              `protobuf:"bytes,7,opt,name=bought_tag,json=boughtTag,proto3" json:"bought_tag,omitempty"`
	CourseTag          string              `protobuf:"bytes,8,opt,name=course_tag,json=courseTag,proto3" json:"course_tag,omitempty"`
	SearchType         int64               `protobuf:"varint,9,opt,name=search_type,json=searchType,proto3" json:"search_type,omitempty"`
	IsStep             int64               `protobuf:"varint,10,opt,name=is_step,json=isStep,proto3" json:"is_step,omitempty"`
	UserName           string              `protobuf:"bytes,11,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	IsFollow           int64               `protobuf:"varint,12,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`
	IsVIcon            *Pic                `protobuf:"bytes,13,opt,name=is_v_icon,json=isVIcon,proto3" json:"is_v_icon,omitempty"`
	UserIcon           []*Pic              `protobuf:"bytes,14,rep,name=user_icon,json=userIcon,proto3" json:"user_icon,omitempty"`
	OnlyLeft           string              `protobuf:"bytes,15,opt,name=only_left,json=onlyLeft,proto3" json:"only_left,omitempty"`
	SalePrice          string              `protobuf:"bytes,16,opt,name=sale_price,json=salePrice,proto3" json:"sale_price,omitempty"`
	OriPrice           string              `protobuf:"bytes,17,opt,name=ori_price,json=oriPrice,proto3" json:"ori_price,omitempty"`
	DiscountTag        string              `protobuf:"bytes,18,opt,name=discount_tag,json=discountTag,proto3" json:"discount_tag,omitempty"`
	SearchSkuItem      *SearchSkuItem      `protobuf:"bytes,19,opt,name=search_sku_item,json=searchSkuItem,proto3" json:"search_sku_item,omitempty"`
	Name               string              `protobuf:"bytes,20,opt,name=name,proto3" json:"name,omitempty"`
	IsCover            string              `protobuf:"bytes,21,opt,name=is_cover,json=isCover,proto3" json:"is_cover,omitempty"`
	ResId              string              `protobuf:"bytes,22,opt,name=res_id,json=resId,proto3" json:"res_id,omitempty"`
	MusicUrl           string              `protobuf:"bytes,23,opt,name=music_url,json=musicUrl,proto3" json:"music_url,omitempty"`
	Cover              string              `protobuf:"bytes,24,opt,name=cover,proto3" json:"cover,omitempty"`
	Musicdata          *SearchMusicItem    `protobuf:"bytes,25,opt,name=musicdata,proto3" json:"musicdata,omitempty"`
	DeepCard           *Pic                `protobuf:"bytes,26,opt,name=deep_card,json=deepCard,proto3" json:"deep_card,omitempty"`
	SearchCategoryItem *SearchCategoryItem `protobuf:"bytes,27,opt,name=search_category_item,json=searchCategoryItem,proto3" json:"search_category_item,omitempty"`
}

func (x *SearchItem) Reset() {
	*x = SearchItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItem) ProtoMessage() {}

func (x *SearchItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItem.ProtoReflect.Descriptor instead.
func (*SearchItem) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{8}
}

func (x *SearchItem) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *SearchItem) GetVideoTag() int64 {
	if x != nil {
		return x.VideoTag
	}
	return 0
}

func (x *SearchItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SearchItem) GetAttrMsg() string {
	if x != nil {
		return x.AttrMsg
	}
	return ""
}

func (x *SearchItem) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *SearchItem) GetBoughtTag() string {
	if x != nil {
		return x.BoughtTag
	}
	return ""
}

func (x *SearchItem) GetCourseTag() string {
	if x != nil {
		return x.CourseTag
	}
	return ""
}

func (x *SearchItem) GetSearchType() int64 {
	if x != nil {
		return x.SearchType
	}
	return 0
}

func (x *SearchItem) GetIsStep() int64 {
	if x != nil {
		return x.IsStep
	}
	return 0
}

func (x *SearchItem) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SearchItem) GetIsFollow() int64 {
	if x != nil {
		return x.IsFollow
	}
	return 0
}

func (x *SearchItem) GetIsVIcon() *Pic {
	if x != nil {
		return x.IsVIcon
	}
	return nil
}

func (x *SearchItem) GetUserIcon() []*Pic {
	if x != nil {
		return x.UserIcon
	}
	return nil
}

func (x *SearchItem) GetOnlyLeft() string {
	if x != nil {
		return x.OnlyLeft
	}
	return ""
}

func (x *SearchItem) GetSalePrice() string {
	if x != nil {
		return x.SalePrice
	}
	return ""
}

func (x *SearchItem) GetOriPrice() string {
	if x != nil {
		return x.OriPrice
	}
	return ""
}

func (x *SearchItem) GetDiscountTag() string {
	if x != nil {
		return x.DiscountTag
	}
	return ""
}

func (x *SearchItem) GetSearchSkuItem() *SearchSkuItem {
	if x != nil {
		return x.SearchSkuItem
	}
	return nil
}

func (x *SearchItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SearchItem) GetIsCover() string {
	if x != nil {
		return x.IsCover
	}
	return ""
}

func (x *SearchItem) GetResId() string {
	if x != nil {
		return x.ResId
	}
	return ""
}

func (x *SearchItem) GetMusicUrl() string {
	if x != nil {
		return x.MusicUrl
	}
	return ""
}

func (x *SearchItem) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SearchItem) GetMusicdata() *SearchMusicItem {
	if x != nil {
		return x.Musicdata
	}
	return nil
}

func (x *SearchItem) GetDeepCard() *Pic {
	if x != nil {
		return x.DeepCard
	}
	return nil
}

func (x *SearchItem) GetSearchCategoryItem() *SearchCategoryItem {
	if x != nil {
		return x.SearchCategoryItem
	}
	return nil
}

type SearchSkuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId       int64 `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	PromotionId int64 `protobuf:"varint,2,opt,name=promotion_id,json=promotionId,proto3" json:"promotion_id,omitempty"`
}

func (x *SearchSkuItem) Reset() {
	*x = SearchSkuItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSkuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSkuItem) ProtoMessage() {}

func (x *SearchSkuItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSkuItem.ProtoReflect.Descriptor instead.
func (*SearchSkuItem) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{9}
}

func (x *SearchSkuItem) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SearchSkuItem) GetPromotionId() int64 {
	if x != nil {
		return x.PromotionId
	}
	return 0
}

type SearchMusicItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicTitle   string        `protobuf:"bytes,1,opt,name=music_title,json=musicTitle,proto3" json:"music_title,omitempty"`
	MusicUrl     string        `protobuf:"bytes,2,opt,name=music_url,json=musicUrl,proto3" json:"music_url,omitempty"`
	MusicCover   string        `protobuf:"bytes,3,opt,name=music_cover,json=musicCover,proto3" json:"music_cover,omitempty"`
	MusicText    string        `protobuf:"bytes,4,opt,name=music_text,json=musicText,proto3" json:"music_text,omitempty"`
	IsFavorite   int32         `protobuf:"varint,5,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`
	LongTime     string        `protobuf:"bytes,6,opt,name=long_time,json=longTime,proto3" json:"long_time,omitempty"`
	DownloadInfo *DownloadInfo `protobuf:"bytes,7,opt,name=download_info,json=downloadInfo,proto3" json:"download_info,omitempty"`
	Favorite     *Favorite     `protobuf:"bytes,8,opt,name=favorite,proto3" json:"favorite,omitempty"`
}

func (x *SearchMusicItem) Reset() {
	*x = SearchMusicItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMusicItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMusicItem) ProtoMessage() {}

func (x *SearchMusicItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMusicItem.ProtoReflect.Descriptor instead.
func (*SearchMusicItem) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{10}
}

func (x *SearchMusicItem) GetMusicTitle() string {
	if x != nil {
		return x.MusicTitle
	}
	return ""
}

func (x *SearchMusicItem) GetMusicUrl() string {
	if x != nil {
		return x.MusicUrl
	}
	return ""
}

func (x *SearchMusicItem) GetMusicCover() string {
	if x != nil {
		return x.MusicCover
	}
	return ""
}

func (x *SearchMusicItem) GetMusicText() string {
	if x != nil {
		return x.MusicText
	}
	return ""
}

func (x *SearchMusicItem) GetIsFavorite() int32 {
	if x != nil {
		return x.IsFavorite
	}
	return 0
}

func (x *SearchMusicItem) GetLongTime() string {
	if x != nil {
		return x.LongTime
	}
	return ""
}

func (x *SearchMusicItem) GetDownloadInfo() *DownloadInfo {
	if x != nil {
		return x.DownloadInfo
	}
	return nil
}

func (x *SearchMusicItem) GetFavorite() *Favorite {
	if x != nil {
		return x.Favorite
	}
	return nil
}

//从ES搜索返回的数据结构
type SearchEsUserResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName     string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserNickname string `protobuf:"bytes,3,opt,name=user_nickname,json=userNickname,proto3" json:"user_nickname,omitempty"`
	UserImage    string `protobuf:"bytes,4,opt,name=user_image,json=userImage,proto3" json:"user_image,omitempty"`
	UserStatus   int64  `protobuf:"varint,5,opt,name=user_status,json=userStatus,proto3" json:"user_status,omitempty"`
	UserBabyName string `protobuf:"bytes,6,opt,name=user_baby_name,json=userBabyName,proto3" json:"user_baby_name,omitempty"`
	GsStatus     int64  `protobuf:"varint,7,opt,name=gs_status,json=gsStatus,proto3" json:"gs_status,omitempty"`
	GStatus      int64  `protobuf:"varint,8,opt,name=g_status,json=gStatus,proto3" json:"g_status,omitempty"`
}

func (x *SearchEsUserResult) Reset() {
	*x = SearchEsUserResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEsUserResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEsUserResult) ProtoMessage() {}

func (x *SearchEsUserResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEsUserResult.ProtoReflect.Descriptor instead.
func (*SearchEsUserResult) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{11}
}

func (x *SearchEsUserResult) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchEsUserResult) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SearchEsUserResult) GetUserNickname() string {
	if x != nil {
		return x.UserNickname
	}
	return ""
}

func (x *SearchEsUserResult) GetUserImage() string {
	if x != nil {
		return x.UserImage
	}
	return ""
}

func (x *SearchEsUserResult) GetUserStatus() int64 {
	if x != nil {
		return x.UserStatus
	}
	return 0
}

func (x *SearchEsUserResult) GetUserBabyName() string {
	if x != nil {
		return x.UserBabyName
	}
	return ""
}

func (x *SearchEsUserResult) GetGsStatus() int64 {
	if x != nil {
		return x.GsStatus
	}
	return 0
}

func (x *SearchEsUserResult) GetGStatus() int64 {
	if x != nil {
		return x.GStatus
	}
	return 0
}

//从ES搜索返回的数据结构
type SearchEsToySkuResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuName string `protobuf:"bytes,1,opt,name=sku_name,json=skuName,proto3" json:"sku_name,omitempty"`
	SkuDesc string `protobuf:"bytes,2,opt,name=sku_desc,json=skuDesc,proto3" json:"sku_desc,omitempty"`
	SkuId   int64  `protobuf:"varint,3,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
}

func (x *SearchEsToySkuResult) Reset() {
	*x = SearchEsToySkuResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEsToySkuResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEsToySkuResult) ProtoMessage() {}

func (x *SearchEsToySkuResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEsToySkuResult.ProtoReflect.Descriptor instead.
func (*SearchEsToySkuResult) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{12}
}

func (x *SearchEsToySkuResult) GetSkuName() string {
	if x != nil {
		return x.SkuName
	}
	return ""
}

func (x *SearchEsToySkuResult) GetSkuDesc() string {
	if x != nil {
		return x.SkuDesc
	}
	return ""
}

func (x *SearchEsToySkuResult) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

//攻略-从ES搜索返回的数据结构
type SearchEsStrategyResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StepId                 int64  `protobuf:"varint,1,opt,name=step_id,json=stepId,proto3" json:"step_id,omitempty"`
	StepType               int64  `protobuf:"varint,2,opt,name=step_type,json=stepType,proto3" json:"step_type,omitempty"`
	Content                string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	StrategyTitle          string `protobuf:"bytes,4,opt,name=strategy_title,json=strategyTitle,proto3" json:"strategy_title,omitempty"`
	StepStatus             int64  `protobuf:"varint,5,opt,name=step_status,json=stepStatus,proto3" json:"step_status,omitempty"`
	Ctime                  string `protobuf:"bytes,6,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Utime                  string `protobuf:"bytes,7,opt,name=utime,proto3" json:"utime,omitempty"`
	TipUserStepStatus      int64  `protobuf:"varint,8,opt,name=tip_user_step_status,json=tipUserStepStatus,proto3" json:"tip_user_step_status,omitempty"`
	TipUserStepAuditStatus int64  `protobuf:"varint,9,opt,name=tip_user_step_audit_status,json=tipUserStepAuditStatus,proto3" json:"tip_user_step_audit_status,omitempty"`
}

func (x *SearchEsStrategyResult) Reset() {
	*x = SearchEsStrategyResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEsStrategyResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEsStrategyResult) ProtoMessage() {}

func (x *SearchEsStrategyResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEsStrategyResult.ProtoReflect.Descriptor instead.
func (*SearchEsStrategyResult) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{13}
}

func (x *SearchEsStrategyResult) GetStepId() int64 {
	if x != nil {
		return x.StepId
	}
	return 0
}

func (x *SearchEsStrategyResult) GetStepType() int64 {
	if x != nil {
		return x.StepType
	}
	return 0
}

func (x *SearchEsStrategyResult) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SearchEsStrategyResult) GetStrategyTitle() string {
	if x != nil {
		return x.StrategyTitle
	}
	return ""
}

func (x *SearchEsStrategyResult) GetStepStatus() int64 {
	if x != nil {
		return x.StepStatus
	}
	return 0
}

func (x *SearchEsStrategyResult) GetCtime() string {
	if x != nil {
		return x.Ctime
	}
	return ""
}

func (x *SearchEsStrategyResult) GetUtime() string {
	if x != nil {
		return x.Utime
	}
	return ""
}

func (x *SearchEsStrategyResult) GetTipUserStepStatus() int64 {
	if x != nil {
		return x.TipUserStepStatus
	}
	return 0
}

func (x *SearchEsStrategyResult) GetTipUserStepAuditStatus() int64 {
	if x != nil {
		return x.TipUserStepAuditStatus
	}
	return 0
}

//tip-从ES搜索返回的数据结构
type SearchEsTipResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId                int64  `protobuf:"varint,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	TipId                 int64  `protobuf:"varint,2,opt,name=tip_id,json=tipId,proto3" json:"tip_id,omitempty"`
	TipTitle              string `protobuf:"bytes,3,opt,name=tip_title,json=tipTitle,proto3" json:"tip_title,omitempty"`
	TipDesc               string `protobuf:"bytes,4,opt,name=tip_desc,json=tipDesc,proto3" json:"tip_desc,omitempty"`
	TipContent            string `protobuf:"bytes,5,opt,name=tip_content,json=tipContent,proto3" json:"tip_content,omitempty"`
	CreateTime            string `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime            string `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	TipApiStatus          int64  `protobuf:"varint,8,opt,name=tip_api_status,json=tipApiStatus,proto3" json:"tip_api_status,omitempty"`
	PlanApiStatus         int64  `protobuf:"varint,9,opt,name=plan_api_status,json=planApiStatus,proto3" json:"plan_api_status,omitempty"`
	CoursebProgressItemId int64  `protobuf:"varint,10,opt,name=courseb_progress_item_id,json=coursebProgressItemId,proto3" json:"courseb_progress_item_id,omitempty"`
	PlanType              int64  `protobuf:"varint,11,opt,name=plan_type,json=planType,proto3" json:"plan_type,omitempty"`
	TipExtend             string `protobuf:"bytes,12,opt,name=tip_extend,json=tipExtend,proto3" json:"tip_extend,omitempty"`
}

func (x *SearchEsTipResult) Reset() {
	*x = SearchEsTipResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEsTipResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEsTipResult) ProtoMessage() {}

func (x *SearchEsTipResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEsTipResult.ProtoReflect.Descriptor instead.
func (*SearchEsTipResult) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{14}
}

func (x *SearchEsTipResult) GetPlanId() int64 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *SearchEsTipResult) GetTipId() int64 {
	if x != nil {
		return x.TipId
	}
	return 0
}

func (x *SearchEsTipResult) GetTipTitle() string {
	if x != nil {
		return x.TipTitle
	}
	return ""
}

func (x *SearchEsTipResult) GetTipDesc() string {
	if x != nil {
		return x.TipDesc
	}
	return ""
}

func (x *SearchEsTipResult) GetTipContent() string {
	if x != nil {
		return x.TipContent
	}
	return ""
}

func (x *SearchEsTipResult) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SearchEsTipResult) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *SearchEsTipResult) GetTipApiStatus() int64 {
	if x != nil {
		return x.TipApiStatus
	}
	return 0
}

func (x *SearchEsTipResult) GetPlanApiStatus() int64 {
	if x != nil {
		return x.PlanApiStatus
	}
	return 0
}

func (x *SearchEsTipResult) GetCoursebProgressItemId() int64 {
	if x != nil {
		return x.CoursebProgressItemId
	}
	return 0
}

func (x *SearchEsTipResult) GetPlanType() int64 {
	if x != nil {
		return x.PlanType
	}
	return 0
}

func (x *SearchEsTipResult) GetTipExtend() string {
	if x != nil {
		return x.TipExtend
	}
	return ""
}

//tip-从ES搜索返回的数据结构
type SearchEsPlanResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId            int64  `protobuf:"varint,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	PlanName          string `protobuf:"bytes,2,opt,name=plan_name,json=planName,proto3" json:"plan_name,omitempty"`
	PlanSubname       string `protobuf:"bytes,3,opt,name=plan_subname,json=planSubname,proto3" json:"plan_subname,omitempty"`
	PlanDes           string `protobuf:"bytes,4,opt,name=plan_des,json=planDes,proto3" json:"plan_des,omitempty"`
	PlanApiStatus     int64  `protobuf:"varint,5,opt,name=plan_api_status,json=planApiStatus,proto3" json:"plan_api_status,omitempty"`
	UpdateTime        string `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	PlanType          int64  `protobuf:"varint,7,opt,name=plan_type,json=planType,proto3" json:"plan_type,omitempty"`
	KitQuestionStatus int64  `protobuf:"varint,8,opt,name=kit_question_status,json=kitQuestionStatus,proto3" json:"kit_question_status,omitempty"`
}

func (x *SearchEsPlanResult) Reset() {
	*x = SearchEsPlanResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEsPlanResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEsPlanResult) ProtoMessage() {}

func (x *SearchEsPlanResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEsPlanResult.ProtoReflect.Descriptor instead.
func (*SearchEsPlanResult) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{15}
}

func (x *SearchEsPlanResult) GetPlanId() int64 {
	if x != nil {
		return x.PlanId
	}
	return 0
}

func (x *SearchEsPlanResult) GetPlanName() string {
	if x != nil {
		return x.PlanName
	}
	return ""
}

func (x *SearchEsPlanResult) GetPlanSubname() string {
	if x != nil {
		return x.PlanSubname
	}
	return ""
}

func (x *SearchEsPlanResult) GetPlanDes() string {
	if x != nil {
		return x.PlanDes
	}
	return ""
}

func (x *SearchEsPlanResult) GetPlanApiStatus() int64 {
	if x != nil {
		return x.PlanApiStatus
	}
	return 0
}

func (x *SearchEsPlanResult) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *SearchEsPlanResult) GetPlanType() int64 {
	if x != nil {
		return x.PlanType
	}
	return 0
}

func (x *SearchEsPlanResult) GetKitQuestionStatus() int64 {
	if x != nil {
		return x.KitQuestionStatus
	}
	return 0
}

type SearchEsFmResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	FmItemId   int64   `protobuf:"varint,2,opt,name=fm_item_id,json=fmItemId,proto3" json:"fm_item_id,omitempty"`
	FmTitle    string  `protobuf:"bytes,3,opt,name=fm_title,json=fmTitle,proto3" json:"fm_title,omitempty"`
	MinAge     float64 `protobuf:"fixed64,4,opt,name=min_age,json=minAge,proto3" json:"min_age,omitempty"`
	MaxAge     float64 `protobuf:"fixed64,5,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	FmStatus   int32   `protobuf:"varint,6,opt,name=fm_status,json=fmStatus,proto3" json:"fm_status,omitempty"`
	FmDesc     string  `protobuf:"bytes,7,opt,name=fm_desc,json=fmDesc,proto3" json:"fm_desc,omitempty"`
	OpStatus   int32   `protobuf:"varint,8,opt,name=op_status,json=opStatus,proto3" json:"op_status,omitempty"`
	MonthDay   string  `protobuf:"bytes,9,opt,name=month_day,json=monthDay,proto3" json:"month_day,omitempty"`
	CreateTime string  `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime string  `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *SearchEsFmResult) Reset() {
	*x = SearchEsFmResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEsFmResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEsFmResult) ProtoMessage() {}

func (x *SearchEsFmResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEsFmResult.ProtoReflect.Descriptor instead.
func (*SearchEsFmResult) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{16}
}

func (x *SearchEsFmResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SearchEsFmResult) GetFmItemId() int64 {
	if x != nil {
		return x.FmItemId
	}
	return 0
}

func (x *SearchEsFmResult) GetFmTitle() string {
	if x != nil {
		return x.FmTitle
	}
	return ""
}

func (x *SearchEsFmResult) GetMinAge() float64 {
	if x != nil {
		return x.MinAge
	}
	return 0
}

func (x *SearchEsFmResult) GetMaxAge() float64 {
	if x != nil {
		return x.MaxAge
	}
	return 0
}

func (x *SearchEsFmResult) GetFmStatus() int32 {
	if x != nil {
		return x.FmStatus
	}
	return 0
}

func (x *SearchEsFmResult) GetFmDesc() string {
	if x != nil {
		return x.FmDesc
	}
	return ""
}

func (x *SearchEsFmResult) GetOpStatus() int32 {
	if x != nil {
		return x.OpStatus
	}
	return 0
}

func (x *SearchEsFmResult) GetMonthDay() string {
	if x != nil {
		return x.MonthDay
	}
	return ""
}

func (x *SearchEsFmResult) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SearchEsFmResult) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

type SearchEsMusicResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicId       int64  `protobuf:"varint,1,opt,name=music_id,json=musicId,proto3" json:"music_id,omitempty"`
	MusicName     string `protobuf:"bytes,2,opt,name=music_name,json=musicName,proto3" json:"music_name,omitempty"`
	Type          string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	MusicCoverId  int64  `protobuf:"varint,4,opt,name=music_cover_id,json=musicCoverId,proto3" json:"music_cover_id,omitempty"`
	MusicStatus   int32  `protobuf:"varint,5,opt,name=music_status,json=musicStatus,proto3" json:"music_status,omitempty"`
	MusicType     int32  `protobuf:"varint,6,opt,name=music_type,json=musicType,proto3" json:"music_type,omitempty"`
	MusicAudioId  int64  `protobuf:"varint,7,opt,name=music_audio_id,json=musicAudioId,proto3" json:"music_audio_id,omitempty"`
	MusicLyric    string `protobuf:"bytes,8,opt,name=music_lyric,json=musicLyric,proto3" json:"music_lyric,omitempty"`
	FmMusicStatus int32  `protobuf:"varint,9,opt,name=fm_music_status,json=fmMusicStatus,proto3" json:"fm_music_status,omitempty"`
}

func (x *SearchEsMusicResult) Reset() {
	*x = SearchEsMusicResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEsMusicResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEsMusicResult) ProtoMessage() {}

func (x *SearchEsMusicResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEsMusicResult.ProtoReflect.Descriptor instead.
func (*SearchEsMusicResult) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{17}
}

func (x *SearchEsMusicResult) GetMusicId() int64 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *SearchEsMusicResult) GetMusicName() string {
	if x != nil {
		return x.MusicName
	}
	return ""
}

func (x *SearchEsMusicResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SearchEsMusicResult) GetMusicCoverId() int64 {
	if x != nil {
		return x.MusicCoverId
	}
	return 0
}

func (x *SearchEsMusicResult) GetMusicStatus() int32 {
	if x != nil {
		return x.MusicStatus
	}
	return 0
}

func (x *SearchEsMusicResult) GetMusicType() int32 {
	if x != nil {
		return x.MusicType
	}
	return 0
}

func (x *SearchEsMusicResult) GetMusicAudioId() int64 {
	if x != nil {
		return x.MusicAudioId
	}
	return 0
}

func (x *SearchEsMusicResult) GetMusicLyric() string {
	if x != nil {
		return x.MusicLyric
	}
	return ""
}

func (x *SearchEsMusicResult) GetFmMusicStatus() int32 {
	if x != nil {
		return x.FmMusicStatus
	}
	return 0
}

type SearchCategoryItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags   []string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	PicTag *Pic     `protobuf:"bytes,2,opt,name=pic_tag,json=picTag,proto3" json:"pic_tag,omitempty"`
}

func (x *SearchCategoryItem) Reset() {
	*x = SearchCategoryItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCategoryItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCategoryItem) ProtoMessage() {}

func (x *SearchCategoryItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCategoryItem.ProtoReflect.Descriptor instead.
func (*SearchCategoryItem) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{18}
}

func (x *SearchCategoryItem) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SearchCategoryItem) GetPicTag() *Pic {
	if x != nil {
		return x.PicTag
	}
	return nil
}

//玩具品类-从ES搜索返回的数据结构
type SearchEsCategoryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId                        int64  `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	ToyIndexCategoryItemId            int64  `protobuf:"varint,2,opt,name=toy_index_category_item_id,json=toyIndexCategoryItemId,proto3" json:"toy_index_category_item_id,omitempty"`
	ToyIndexCategoryItemStatus        int32  `protobuf:"varint,3,opt,name=toy_index_category_item_status,json=toyIndexCategoryItemStatus,proto3" json:"toy_index_category_item_status,omitempty"`
	SellPointType                     int32  `protobuf:"varint,4,opt,name=sell_point_type,json=sellPointType,proto3" json:"sell_point_type,omitempty"`
	SellPointStatus                   int32  `protobuf:"varint,5,opt,name=sell_point_status,json=sellPointStatus,proto3" json:"sell_point_status,omitempty"`
	ToyIndexCategoryItemSellPointName string `protobuf:"bytes,6,opt,name=toy_index_category_item_sell_point_name,json=toyIndexCategoryItemSellPointName,proto3" json:"toy_index_category_item_sell_point_name,omitempty"`
	ToyIndexCategoryItemTitle         string `protobuf:"bytes,7,opt,name=toy_index_category_item_title,json=toyIndexCategoryItemTitle,proto3" json:"toy_index_category_item_title,omitempty"`
	ToyIndexCategoryItemIntroduce     string `protobuf:"bytes,8,opt,name=toy_index_category_item_introduce,json=toyIndexCategoryItemIntroduce,proto3" json:"toy_index_category_item_introduce,omitempty"`
	ToyIndexCategoryItemUtime         string `protobuf:"bytes,9,opt,name=toy_index_category_item_utime,json=toyIndexCategoryItemUtime,proto3" json:"toy_index_category_item_utime,omitempty"`
}

func (x *SearchEsCategoryResult) Reset() {
	*x = SearchEsCategoryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_es_web_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchEsCategoryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEsCategoryResult) ProtoMessage() {}

func (x *SearchEsCategoryResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_es_web_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEsCategoryResult.ProtoReflect.Descriptor instead.
func (*SearchEsCategoryResult) Descriptor() ([]byte, []int) {
	return file_api_es_web_proto_rawDescGZIP(), []int{19}
}

func (x *SearchEsCategoryResult) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SearchEsCategoryResult) GetToyIndexCategoryItemId() int64 {
	if x != nil {
		return x.ToyIndexCategoryItemId
	}
	return 0
}

func (x *SearchEsCategoryResult) GetToyIndexCategoryItemStatus() int32 {
	if x != nil {
		return x.ToyIndexCategoryItemStatus
	}
	return 0
}

func (x *SearchEsCategoryResult) GetSellPointType() int32 {
	if x != nil {
		return x.SellPointType
	}
	return 0
}

func (x *SearchEsCategoryResult) GetSellPointStatus() int32 {
	if x != nil {
		return x.SellPointStatus
	}
	return 0
}

func (x *SearchEsCategoryResult) GetToyIndexCategoryItemSellPointName() string {
	if x != nil {
		return x.ToyIndexCategoryItemSellPointName
	}
	return ""
}

func (x *SearchEsCategoryResult) GetToyIndexCategoryItemTitle() string {
	if x != nil {
		return x.ToyIndexCategoryItemTitle
	}
	return ""
}

func (x *SearchEsCategoryResult) GetToyIndexCategoryItemIntroduce() string {
	if x != nil {
		return x.ToyIndexCategoryItemIntroduce
	}
	return ""
}

func (x *SearchEsCategoryResult) GetToyIndexCategoryItemUtime() string {
	if x != nil {
		return x.ToyIndexCategoryItemUtime
	}
	return ""
}

var File_api_es_web_proto protoreflect.FileDescriptor

var file_api_es_web_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x73, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x03, 0x50, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x22, 0xc2, 0x02, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x65,
	0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x62,
	0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4d,
	0x61, 0x72, 0x6b, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x6c,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x61, 0x70, 0x69, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x75, 0x62, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x70, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x48,
	0x0a, 0x0b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa7, 0x03, 0x0a, 0x0c, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x75, 0x67, 0x68, 0x74, 0x54,
	0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x68, 0x6f,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x09, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4d, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x77, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x77, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x34, 0x0a, 0x08, 0x4d, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x69, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x50, 0x69, 0x63, 0x22, 0x57, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x74, 0x74, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b,
	0x66, 0x6d, 0x5f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x66, 0x6d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x22, 0xd6, 0x06, 0x0a,
	0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x1b, 0x0a,
	0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x54, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6d, 0x73, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x74, 0x74, 0x72, 0x4d, 0x73, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x75, 0x67, 0x68,
	0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x75,
	0x67, 0x68, 0x74, 0x54, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x5f, 0x74, 0x61, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x54, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x53, 0x74, 0x65, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x76, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04, 0x2e, 0x50,
	0x69, 0x63, 0x52, 0x07, 0x69, 0x73, 0x56, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x04,
	0x2e, 0x50, 0x69, 0x63, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6f, 0x6e, 0x6c, 0x79, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x61, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72,
	0x69, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x72, 0x69, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x36, 0x0a, 0x0f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x6b, 0x75, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x6b, 0x75, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x75, 0x73,
	0x69, 0x63, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x64, 0x61, 0x74, 0x61, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x09, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x09, 0x64,
	0x65, 0x65, 0x70, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x04,
	0x2e, 0x50, 0x69, 0x63, 0x52, 0x08, 0x64, 0x65, 0x65, 0x70, 0x43, 0x61, 0x72, 0x64, 0x12, 0x45,
	0x0a, 0x14, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x12, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x49, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x6b, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0xa8, 0x02, 0x0a, 0x0f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x55,
	0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x32, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x08, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x22, 0x8d, 0x02, 0x0a, 0x12,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a,
	0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x62, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x42, 0x61, 0x62, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x67, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x63, 0x0a, 0x14, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x73, 0x54, 0x6f, 0x79, 0x53, 0x6b, 0x75, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6b, 0x75, 0x44, 0x65, 0x73, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64,
	0x22, 0xc9, 0x02, 0x0a, 0x16, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x73, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x74, 0x65, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74,
	0x65, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x2f, 0x0a, 0x14, 0x74, 0x69, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x65, 0x70,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x74,
	0x69, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x65, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3a, 0x0a, 0x1a, 0x74, 0x69, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x65,
	0x70, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x74, 0x69, 0x70, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x65,
	0x70, 0x41, 0x75, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa1, 0x03, 0x0a,
	0x11, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x73, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74,
	0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x69, 0x70,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x70, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x70, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x69, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x69, 0x70, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69,
	0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x69, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x74, 0x69, 0x70, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x69, 0x70, 0x41, 0x70, 0x69, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6c,
	0x61, 0x6e, 0x41, 0x70, 0x69, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x62, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x70, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x22, 0x9e, 0x02, 0x0a, 0x12, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x73, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x70,
	0x6c, 0x61, 0x6e, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x6e, 0x41, 0x70, 0x69, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6b, 0x69, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x6b, 0x69, 0x74, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xc3, 0x02, 0x0a, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x73, 0x46, 0x6d,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x66, 0x6d,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x66, 0x6d, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x6d, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x6d, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x61, 0x78, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6d,
	0x61, 0x78, 0x41, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6d, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6f, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x6e, 0x74,
	0x68, 0x5f, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x44, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xba, 0x02, 0x0a, 0x13, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x45, 0x73, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x75,
	0x73, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x75, 0x73, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x75, 0x73, 0x69, 0x63, 0x5f, 0x6c, 0x79, 0x72, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x4c, 0x79, 0x72, 0x69, 0x63, 0x12, 0x26, 0x0a, 0x0f,
	0x66, 0x6d, 0x5f, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x6d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x47, 0x0a, 0x12, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d,
	0x0a, 0x07, 0x70, 0x69, 0x63, 0x5f, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x04, 0x2e, 0x50, 0x69, 0x63, 0x52, 0x06, 0x70, 0x69, 0x63, 0x54, 0x61, 0x67, 0x22, 0xaf, 0x04,
	0x0a, 0x16, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x1a, 0x74, 0x6f, 0x79,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x74,
	0x6f, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x1e, 0x74, 0x6f, 0x79, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x74,
	0x6f, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6c,
	0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x65,
	0x6c, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a,
	0x27, 0x74, 0x6f, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x21,
	0x74, 0x6f, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x6c, 0x6c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x40, 0x0a, 0x1d, 0x74, 0x6f, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x74, 0x6f, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x21, 0x74, 0x6f, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d,
	0x74, 0x6f, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x40, 0x0a,
	0x1d, 0x74, 0x6f, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x74, 0x6f, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_es_web_proto_rawDescOnce sync.Once
	file_api_es_web_proto_rawDescData = file_api_es_web_proto_rawDesc
)

func file_api_es_web_proto_rawDescGZIP() []byte {
	file_api_es_web_proto_rawDescOnce.Do(func() {
		file_api_es_web_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_es_web_proto_rawDescData)
	})
	return file_api_es_web_proto_rawDescData
}

var file_api_es_web_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_es_web_proto_goTypes = []interface{}{
	(*Pic)(nil),                    // 0: Pic
	(*File)(nil),                   // 1: File
	(*ApiSearchParams)(nil),        // 2: api_search_params
	(*SearchAllResult)(nil),        // 3: searchAllResult
	(*SearchResult)(nil),           // 4: searchResult
	(*MoreInfo)(nil),               // 5: MoreInfo
	(*DownloadInfo)(nil),           // 6: downloadInfo
	(*Favorite)(nil),               // 7: favorite
	(*SearchItem)(nil),             // 8: searchItem
	(*SearchSkuItem)(nil),          // 9: searchSkuItem
	(*SearchMusicItem)(nil),        // 10: searchMusicItem
	(*SearchEsUserResult)(nil),     // 11: searchEsUserResult
	(*SearchEsToySkuResult)(nil),   // 12: searchEsToySkuResult
	(*SearchEsStrategyResult)(nil), // 13: searchEsStrategyResult
	(*SearchEsTipResult)(nil),      // 14: searchEsTipResult
	(*SearchEsPlanResult)(nil),     // 15: searchEsPlanResult
	(*SearchEsFmResult)(nil),       // 16: searchEsFmResult
	(*SearchEsMusicResult)(nil),    // 17: searchEsMusicResult
	(*SearchCategoryItem)(nil),     // 18: searchCategoryItem
	(*SearchEsCategoryResult)(nil), // 19: searchEsCategoryResult
	nil,                            // 20: searchAllResult.ResultEntry
}
var file_api_es_web_proto_depIdxs = []int32{
	20, // 0: searchAllResult.result:type_name -> searchAllResult.ResultEntry
	5,  // 1: searchResult.more_info:type_name -> MoreInfo
	8,  // 2: searchResult.items:type_name -> searchItem
	0,  // 3: searchItem.is_v_icon:type_name -> Pic
	0,  // 4: searchItem.user_icon:type_name -> Pic
	9,  // 5: searchItem.search_sku_item:type_name -> searchSkuItem
	10, // 6: searchItem.musicdata:type_name -> searchMusicItem
	0,  // 7: searchItem.deep_card:type_name -> Pic
	18, // 8: searchItem.search_category_item:type_name -> searchCategoryItem
	6,  // 9: searchMusicItem.download_info:type_name -> downloadInfo
	7,  // 10: searchMusicItem.favorite:type_name -> favorite
	0,  // 11: searchCategoryItem.pic_tag:type_name -> Pic
	4,  // 12: searchAllResult.ResultEntry.value:type_name -> searchResult
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_es_web_proto_init() }
func file_api_es_web_proto_init() {
	if File_api_es_web_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_es_web_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApiSearchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchAllResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Favorite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSkuItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMusicItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEsUserResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEsToySkuResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEsStrategyResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEsTipResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEsPlanResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEsFmResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEsMusicResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCategoryItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_es_web_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchEsCategoryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_es_web_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_es_web_proto_goTypes,
		DependencyIndexes: file_api_es_web_proto_depIdxs,
		MessageInfos:      file_api_es_web_proto_msgTypes,
	}.Build()
	File_api_es_web_proto = out.File
	file_api_es_web_proto_rawDesc = nil
	file_api_es_web_proto_goTypes = nil
	file_api_es_web_proto_depIdxs = nil
}
